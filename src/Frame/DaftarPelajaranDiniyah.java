/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/*
 * DaftarPelajaran.java
 *
 * Created on Feb 5, 2014, 8:05:20 AM
 */

package Frame;

import Connection.Koneksi_DB;
import Connection.HasilKeluaranTabel;
import java.awt.Dimension;
import java.awt.Toolkit;
import java.awt.*;
import java.sql.*;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.*;
import javax.swing.event.ListSelectionEvent;
import javax.swing.event.ListSelectionListener;


/**
 *
 * @author USER
 */
public class DaftarPelajaranDiniyah extends javax.swing.JFrame {
int kodee = 0;

    /** Creates new form DaftarPelajaran */
    public DaftarPelajaranDiniyah() {
        initComponents();
//        pilihtabel();
        Dimension screenSize = Toolkit.getDefaultToolkit().getScreenSize();
        Dimension frameSize = getSize();
        setLocation(
        (screenSize.width - frameSize.width) / 2,
        (screenSize.height - frameSize.height) / 2);
        try
        {
            
            Koneksi_DB objkoneksi = new Koneksi_DB();
            Connection con =objkoneksi.bukakoneksi();
            Statement st = con.createStatement();
            String SQL = "select kode from enabled";
            ResultSet RS=st.executeQuery(SQL);
            while(RS.next()){kodee=RS.getInt(1);}
            if (kodee==9){ tampiledit();}
            if (kodee==3){tampiltambah();}
            if (kodee==10){tampilhapus();}
             }
        catch (SQLException e){}
        tampiltabel();
        bersih();
    }

    void tampiltambah()
    {
        edit.setEnabled(false);
        hapus.setEnabled(false);
        simpan.setEnabled(true);
        batal.setEnabled(true);
    }

    void tampiledit()
    {
        simpan.setEnabled(false);
        hapus.setEnabled(false);
        edit.setEnabled(true);
        batal.setEnabled(true);
    }

    void tampilhapus()
    {
        simpan.setEnabled(false);
        hapus.setEnabled(true);
        batal.setEnabled(true);
        edit.setEnabled(false);
    }

    void bersih()
    {
        kode.setText("");
        mata.setText("");
        jenis.setSelectedIndex(0);
        kode.setEditable(true);
    }
    void combox(){
         try {
            Koneksi_DB objkoneksi = new Koneksi_DB();
            Connection con =objkoneksi.bukakoneksi();
            Statement st = con.createStatement();
            String query = "SELECT id_kelas FROM data_combobox";
           // Statement st = db.getKoneksi().createStatement();
            ResultSet rs = st.executeQuery(query);
            
            while (rs.next()) {                
                jenis.addItem(rs.getString("id_kelas"));
            }
            
            rs.last();
            int jumlahdata = rs.getRow();
            rs.first();
            
        } catch (SQLException e) {
             System.out.println("Gagal jupuk");
        }
    }

    void pilihtabel()
    {
        tabel.getSelectionModel().addListSelectionListener(new ListSelectionListener() {

            public void valueChanged(ListSelectionEvent e) {
                try {
                    Koneksi_DB objkoneksi = new Koneksi_DB();
                    Connection con = objkoneksi.bukakoneksi();
                    Statement st = con.createStatement();
                    String sql = "select *from pelajaran";
                    ResultSet set = st.executeQuery(sql);
                    if (set.next())
                    {
                        kode.setText(set.getString(1));
                        mata.setText(set.getString(2));
                        jenis.setSelectedItem(set.getString(3));
                    }
                } catch (SQLException ex) {
                    Logger.getLogger(DaftarPelajaranDiniyah.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
        });
    }

    void tampiltabel()
    {
        try
        {
            Koneksi_DB objkoneksi = new Koneksi_DB();
            Connection con = objkoneksi.bukakoneksi();
            Statement st = con.createStatement();
            String sql = "select KodePelajaran,Mapel from pelajaran";
            ResultSet set = st.executeQuery(sql);
            HasilKeluaranTabel model = new HasilKeluaranTabel (set);
            tabel.setModel (model);
        }
        catch (SQLException e)
        {
            System.out.println("gagal query ini"+e);
        }
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        kode = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        mata = new javax.swing.JTextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        tabel = new javax.swing.JTable();
        back = new javax.swing.JButton();
        batal = new javax.swing.JButton();
        hapus = new javax.swing.JButton();
        edit = new javax.swing.JButton();
        simpan = new javax.swing.JButton();
        jLabel4 = new javax.swing.JLabel();
        hari = new javax.swing.JComboBox<>();
        jenis = new javax.swing.JComboBox<>();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Daftar Pelajaran");
        setBackground(new java.awt.Color(102, 102, 102));

        jLabel1.setText("Kode");

        jLabel2.setText("Mata Diniyah");

        kode.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                kodeActionPerformed(evt);
            }
        });
        kode.addPropertyChangeListener(new java.beans.PropertyChangeListener() {
            public void propertyChange(java.beans.PropertyChangeEvent evt) {
                kodePropertyChange(evt);
            }
        });
        kode.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                kodeKeyPressed(evt);
            }
        });

        jLabel3.setText("Kelas");

        tabel.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        tabel.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tabelMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(tabel);

        back.setIcon(new javax.swing.ImageIcon(getClass().getResource("/image/Back.png"))); // NOI18N
        back.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                backActionPerformed(evt);
            }
        });

        batal.setBackground(new java.awt.Color(0, 204, 255));
        batal.setText("Batal");
        batal.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                batalActionPerformed(evt);
            }
        });

        hapus.setBackground(new java.awt.Color(0, 204, 255));
        hapus.setText("Hapus");
        hapus.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                hapusActionPerformed(evt);
            }
        });

        edit.setBackground(new java.awt.Color(0, 204, 255));
        edit.setText("Edit");
        edit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                editActionPerformed(evt);
            }
        });

        simpan.setBackground(new java.awt.Color(0, 204, 255));
        simpan.setText("Simpan");
        simpan.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                simpanActionPerformed(evt);
            }
        });

        jLabel4.setText("Hari");

        hari.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Pilih Hari", "Senin", "Selasa", "Rabu", "Kamis", "Jumat", "Sabtu", "Minggu", " " }));
        hari.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                hariActionPerformed(evt);
            }
        });

        jenis.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Pilih Kelas", "Satu Awaliyah", "Dua Awaliyah", "Satu Wustho", "Dua Wustho", "Satu Ulya", "Dua Ulya" }));

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(84, 84, 84)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel1)
                            .addComponent(jLabel2)
                            .addComponent(jLabel3)
                            .addComponent(jLabel4))
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(14, 14, 14)
                                .addComponent(kode, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(mata, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(hari, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jenis, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(18, 18, 18)
                        .addComponent(simpan, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(edit, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(hapus, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(batal, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(20, 20, 20))
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(back)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(kode, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel2)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(mata, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel3)
                            .addComponent(jenis, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel4)
                    .addComponent(hari, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(74, 74, 74)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 129, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(40, 40, 40)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(batal)
                    .addComponent(hapus)
                    .addComponent(edit)
                    .addComponent(simpan))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 10, Short.MAX_VALUE)
                .addComponent(back)
                .addGap(31, 31, 31))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void editActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_editActionPerformed
        int pilih = 0;
        if (jenis.getSelectedItem().equals("Satu Awaliyah")){
            pilih = 1;
        } else if (jenis.getSelectedItem().equals("Dua Awaliyah")){
            pilih = 2;
        } else if (jenis.getSelectedItem().equals("Satu Wustho")){
            pilih = 3;
        }else if (jenis.getSelectedItem().equals("Dua Wustho")){
            pilih = 4;
        }else if (jenis.getSelectedItem().equals("Satu Ulya")){
            pilih = 5;
        } else if (jenis.getSelectedItem().equals("Dua Ulya")){
          pilih = 6;
    }
        try
        {
            Koneksi_DB objkoneksi = new Koneksi_DB();
            Connection con =objkoneksi.bukakoneksi();
            Statement st = con.createStatement();
            //UPDATE `Akademik`.`pelajaran` SET `Mapel`='Tijan Durorras', `id_kelas`=1, `hari_diniyah`='senin' WHERE  `KodePelajaran`='6';
            String sql = "update Akademik.pelajaran set Mapel='"+mata.getText()+"', "
                    + "id_kelas = '"+pilih+"',"
                    + "hari_diniyah = '"+hari.getSelectedItem()+"'"
                    + "where KodePelajaran ='" +kode.getText()+"'";
            //UPDATE `Akademik`.`pelajaran` SET `Mapel`='Tijan Durorras', `id_kelas`=1, `hari_diniyah`='senin' WHERE  `KodePelajaran`='6';
            int row =st.executeUpdate(sql);
            if (row==1)
            {
                JOptionPane.showMessageDialog(null,"Data sudah diupdate","informasi",JOptionPane.INFORMATION_MESSAGE);
                con.close();
            }
        }
        catch (SQLException e)
        {
            JOptionPane.showMessageDialog(null,"data tidak diubah"+ e,"informasi",JOptionPane.INFORMATION_MESSAGE);
        }
        bersih();
        tampiltabel();
    }//GEN-LAST:event_editActionPerformed

    private void backActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_backActionPerformed
        dispose();
        new DashboardPondok().setVisible(true);
    }//GEN-LAST:event_backActionPerformed

    private void simpanActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_simpanActionPerformed
        int pilih = 0;
        if (jenis.getSelectedItem().equals("Satu Awaliyah")){
            pilih = 1;
        } else if (jenis.getSelectedItem().equals("Dua Awaliyah")){
            pilih = 2;
        } else if (jenis.getSelectedItem().equals("Satu Wustho")){
            pilih = 3;
        }else if (jenis.getSelectedItem().equals("Dua Wustho")){
            pilih = 4;
        }else if (jenis.getSelectedItem().equals("Satu Ulya")){
            pilih = 5;
        } else if (jenis.getSelectedItem().equals("Dua Ulya")){
          pilih = 6;
    }
          
        try {
            Koneksi_DB objkoneksi = new Koneksi_DB();
            Connection con =objkoneksi.bukakoneksi();
            Statement st = con.createStatement();
            

            
            String sql = "insert into pelajaran (KodePelajaran,Mapel,id_kelas, hari_diniyah)"
                    
                    + "values ('"+kode.getText()+"','"+mata.getText()+"','"+pilih+"','"+hari.getSelectedItem()+"')";
            int row =st.executeUpdate(sql);
            if (row==1)
            {
                JOptionPane.showMessageDialog(null,"Data sudah ditambahkan ke database","informasi",JOptionPane.INFORMATION_MESSAGE);
            }
        }
        catch (SQLException e)
        {
            JOptionPane.showMessageDialog(null,"data tidak ditambahkan ke database","informasi",JOptionPane.INFORMATION_MESSAGE);
            System.out.println(e);
        }
        bersih();
        tampiltabel();
    }//GEN-LAST:event_simpanActionPerformed

    private void hapusActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_hapusActionPerformed
        try
        {
            Koneksi_DB objkoneksi = new Koneksi_DB();
            Connection con = objkoneksi.bukakoneksi();
            Statement st = con.createStatement();
            String sql = "delete from pelajaran where KodePelajaran= '"+kode.getText()+"'";
            int confirm =JOptionPane.showConfirmDialog(this,
            "Yakin untuk menghapus data ini?",
            "Konfirmasi Hapus ",
            JOptionPane.YES_NO_OPTION,
            JOptionPane.QUESTION_MESSAGE);
            if (confirm==JOptionPane.YES_OPTION) {
            int row = st.executeUpdate(sql);
            if (row ==1)
            {
                JOptionPane.showMessageDialog(null,"data sudah dihapus dari database","informasi",JOptionPane.INFORMATION_MESSAGE);
                con.close();
            }}}

        catch (Exception e)
        {
            JOptionPane.showMessageDialog(null, "data tidak dihapus"+e,"informasi",JOptionPane.INFORMATION_MESSAGE);
        }
        bersih();
        tampiltabel();
    }//GEN-LAST:event_hapusActionPerformed

    private void batalActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_batalActionPerformed
        bersih();
        tampiltabel();
    }//GEN-LAST:event_batalActionPerformed

    private void kodeKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_kodeKeyPressed
        if (evt.getKeyCode() == evt.VK_ENTER)

        {
                try
                {
                Class.forName("com.mysql.jdbc.Driver").newInstance();
                Connection koneksi = DriverManager.getConnection("jdbc:mysql://localhost/Akademik", "root", "");
                Statement state = koneksi.createStatement();
                String query = "select *from pelajaran where kodepelajaran = '"+kode.getText()+"'";
                ResultSet rs = state.executeQuery(query);
                if(rs.next())
                {
                    mata.setText(rs.getString(2));
                    jenis.setSelectedItem(rs.getString(3));
                    hari.setSelectedItem(rs.getString(4));
                    kode.setEditable(false);
                    String sql = "select *from pelajaran where kodepelajaran ='"+kode.getText()+"'";
                    ResultSet set = state.executeQuery(sql);
                    HasilKeluaranTabel model = new HasilKeluaranTabel (set);
                    tabel.setModel (model);
                }

                }
                catch(Exception ex)
                {
                    System.out.println(ex);
                }
        }
    }//GEN-LAST:event_kodeKeyPressed

    private void tabelMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tabelMouseClicked
        
    }//GEN-LAST:event_tabelMouseClicked

    private void hariActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_hariActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_hariActionPerformed

    private void kodePropertyChange(java.beans.PropertyChangeEvent evt) {//GEN-FIRST:event_kodePropertyChange
        // TODO add your handling code here:
        tampiltabel();
    }//GEN-LAST:event_kodePropertyChange

    private void kodeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_kodeActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_kodeActionPerformed

    /**
    * @param args the command line arguments
    */
    public static void main(String args[]) {
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new DaftarPelajaranDiniyah().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton back;
    private javax.swing.JButton batal;
    private javax.swing.JButton edit;
    private javax.swing.JButton hapus;
    private javax.swing.JComboBox<String> hari;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JComboBox<String> jenis;
    private javax.swing.JTextField kode;
    private javax.swing.JTextField mata;
    private javax.swing.JButton simpan;
    private javax.swing.JTable tabel;
    // End of variables declaration//GEN-END:variables

}
